!function(c){var r={};function g(l){if(r[l])return r[l].exports;var n=r[l]={i:l,l:!1,exports:{}};return c[l].call(n.exports,n,n.exports,g),n.l=!0,n.exports}g.m=c,g.c=r,g.d=function(c,r,l){g.o(c,r)||Object.defineProperty(c,r,{enumerable:!0,get:l})},g.r=function(c){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(c,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(c,"__esModule",{value:!0})},g.t=function(c,r){if(1&r&&(c=g(c)),8&r)return c;if(4&r&&"object"==typeof c&&c&&c.__esModule)return c;var l=Object.create(null);if(g.r(l),Object.defineProperty(l,"default",{enumerable:!0,value:c}),2&r&&"string"!=typeof c)for(var n in c)g.d(l,n,function(r){return c[r]}.bind(null,n));return l},g.n=function(c){var r=c&&c.__esModule?function(){return c.default}:function(){return c};return g.d(r,"a",r),r},g.o=function(c,r){return Object.prototype.hasOwnProperty.call(c,r)},g.p="",g(g.s=0)}([function(module,exports,__webpack_require__){"use strict";eval('\r\n\r\nif ("serviceWorker" in navigator) {\r\n  window.addEventListener("load", function() {\r\n    navigator.serviceWorker.register("serviceworker.js").then(\r\n      function(registration) {\r\n        // Registration was successful\r\n        console.log(\r\n          "ServiceWorker registration successful with scope: ",\r\n          registration.scope\r\n        );\r\n      },\r\n      function(err) {\r\n        // registration failed\r\n        console.log("ServiceWorker registration failed: ", err);\r\n      }\r\n    );\r\n  });\r\n}\r\n\r\nlet canvas;\r\nlet ctx;\r\nlet gameBoardArrayHeight = 25;\r\nlet gameBoardArrayWidth = 16;\r\nlet highScore = 0;\r\nlet level = 1;\r\nconst levelUp = 20;\r\nlet pause = false;\r\nlet score = 0;\r\nlet speed = 1;\r\nlet startX = 6;\r\nlet startY = 0;\r\nlet tetrisLogo;\r\nlet time;\r\nlet winOrLose = "Playing";\r\n\r\nlocalStorage.setItem("highScore", 0);\r\nif (localStorage.getItem(highScore)) {\r\n  highScore = localStorage.getItem("highScore");\r\n} else {\r\n  localStorage.setItem("highScore", 0);\r\n}\r\n\r\nlet coordinateArray = [...Array(gameBoardArrayHeight)].map(e =>\r\n  Array(gameBoardArrayWidth).fill(0)\r\n);\r\nlet gameBoardArray = [...Array(gameBoardArrayHeight)].map(e =>\r\n  Array(gameBoardArrayWidth).fill(0)\r\n);\r\nlet stoppedShapeArray = [...Array(gameBoardArrayHeight)].map(e =>\r\n  Array(gameBoardArrayWidth).fill(0)\r\n);\r\n\r\nlet currentTetromino = [\r\n  // T Shape\r\n  [1, 0],\r\n  [0, 1],\r\n  [1, 1],\r\n  [2, 1]\r\n];\r\n\r\n//Create shapes\r\nlet tetrominos = [];\r\nfunction CreateShapes() {\r\n  // T Shape\r\n  tetrominos.push([\r\n    [1, 0],\r\n    [0, 1],\r\n    [1, 1],\r\n    [2, 1]\r\n  ]);\r\n  // I Shape\r\n  tetrominos.push([\r\n    [0, 0],\r\n    [1, 0],\r\n    [2, 0],\r\n    [3, 0]\r\n  ]);\r\n  // J Shape\r\n  tetrominos.push([\r\n    [0, 0],\r\n    [0, 1],\r\n    [1, 1],\r\n    [2, 1]\r\n  ]);\r\n  // Square Shape\r\n  tetrominos.push([\r\n    [0, 0],\r\n    [1, 0],\r\n    [0, 1],\r\n    [1, 1]\r\n  ]);\r\n  // L Shape\r\n  tetrominos.push([\r\n    [2, 0],\r\n    [0, 1],\r\n    [1, 1],\r\n    [2, 1]\r\n  ]);\r\n  // S Shape\r\n  tetrominos.push([\r\n    [1, 0],\r\n    [2, 0],\r\n    [0, 1],\r\n    [1, 1]\r\n  ]);\r\n  // Z Shape\r\n  tetrominos.push([\r\n    [0, 0],\r\n    [1, 0],\r\n    [1, 1],\r\n    [2, 1]\r\n  ]);\r\n}\r\nlet shapesColors = [\r\n  "lime",\r\n  "cyan",\r\n  "blue",\r\n  "green",\r\n  "red",\r\n  "orange",\r\n  "magenta"\r\n];\r\nlet currentTetrominoColor = "coral";\r\n\r\nlet DIRECTION = {\r\n  IDLE: 0,\r\n  DOWN: 1,\r\n  LEFT: 2,\r\n  RIGHT: 3\r\n};\r\n\r\nlet KEYS = {\r\n  LEFT: 65,\r\n  IDLE: 87,\r\n  RIGHT: 68,\r\n  DOWN: 83,\r\n  PAUSE: 80,\r\n  SPACE: 32\r\n};\r\n\r\nlet direction;\r\n\r\nclass Coordinates {\r\n  constructor(x, y) {\r\n    this.x = x;\r\n    this.y = y;\r\n  }\r\n}\r\n\r\nfunction CreateCoordArray() {\r\n  let i = 0,\r\n    j = 0;\r\n  for (let y = 4; y <= 550; y += 22) {\r\n    for (let x = 140; x <= 470; x += 22) {\r\n      coordinateArray[i][j] = new Coordinates(x, y);\r\n      i++;\r\n    }\r\n    j++;\r\n    i = 0;\r\n  }\r\n}\r\n\r\ndocument.addEventListener("DOMContentLoaded", SetupCanvas);\r\n\r\nfunction SetupCanvas() {\r\n  canvas = document.getElementById("canvas");\r\n  ctx = canvas.getContext("2d");\r\n  canvas.width = 640;\r\n  canvas.height = 558;\r\n\r\n  ctx.fillStyle = "white";\r\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n  ctx.strokeStyle = "black";\r\n  ctx.strokeRect(138, 2, 354, 552);\r\n\r\n  tetrisLogo = new Image(160, 50);\r\n  tetrisLogo.onload = DrawTetrisLogo;\r\n  tetrisLogo.src = "assets/img/indeks.jpg";\r\n\r\n  ctx.font = "1.3rem Arial";\r\n  ctx.fillStyle = "red";\r\n  ctx.fillText("Score", 500, 100);\r\n  ctx.fillText(score.toString(), 570, 100);\r\n\r\n  ctx.fillStyle = "orange";\r\n  ctx.fillText("Level", 500, 150);\r\n  ctx.fillText(level.toString(), 570, 150);\r\n\r\n  ctx.fillStyle = "green";\r\n  ctx.fillText(winOrLose, 500, 200);\r\n\r\n  ctx.fillStyle = "#0066cc";\r\n  ctx.fillText("CONTROLS", 500, 320);\r\n  ctx.fillText("A: Move left", 500, 350);\r\n  ctx.fillText("D: Move right", 500, 380);\r\n  ctx.fillText("S: Move down", 500, 410);\r\n  ctx.fillText("P: Pasue", 500, 440);\r\n  ctx.fillText("Space: Rotate", 500, 470);\r\n\r\n  document.addEventListener("keydown", handleKeyPress);\r\n\r\n  CreateShapes();\r\n  CreateTetromino();\r\n  CreateCoordArray();\r\n  DrawTetromino();\r\n}\r\n\r\nfunction DrawTetrisLogo() {\r\n  ctx.drawImage(tetrisLogo, 0, 50, 130, 70);\r\n  ctx.drawImage(tetrisLogo, 0, 100, 130, 70);\r\n  ctx.drawImage(tetrisLogo, 0, 150, 130, 70);\r\n  ctx.drawImage(tetrisLogo, 0, 200, 130, 70);\r\n  ctx.drawImage(tetrisLogo, 0, 250, 130, 70);\r\n}\r\n\r\nfunction CreateTetromino() {\r\n  let randomTetromino = Math.floor(Math.random() * tetrominos.length);\r\n  currentTetromino = tetrominos[randomTetromino];\r\n  currentTetrominoColor = shapesColors[randomTetromino];\r\n}\r\n\r\nfunction DrawTetromino() {\r\n  for (let i = 0; i < currentTetromino.length; i++) {\r\n    let x = currentTetromino[i][0] + startX;\r\n    let y = currentTetromino[i][1] + startY;\r\n    gameBoardArray[x][y] = 1;\r\n    let coorX = coordinateArray[x][y].x;\r\n    let coorY = coordinateArray[x][y].y;\r\n    ctx.fillStyle = currentTetrominoColor;\r\n    ctx.fillRect(coorX, coorY, 20, 20);\r\n  }\r\n}\r\n\r\nfunction DeleteTetromino() {\r\n  for (let i = 0; i < currentTetromino.length; i++) {\r\n    let x = currentTetromino[i][0] + startX;\r\n    let y = currentTetromino[i][1] + startY;\r\n    gameBoardArray[x][y] = 1;\r\n    let coorX = coordinateArray[x][y].x;\r\n    let coorY = coordinateArray[x][y].y;\r\n    ctx.fillStyle = "white";\r\n    ctx.fillRect(coorX, coorY, 20, 20);\r\n  }\r\n}\r\n\r\ndocument.addEventListener("keydown", handleKeyPress);\r\n\r\nfunction handleKeyPress(key) {\r\n  if (winOrLose != "Game Over") {\r\n    if (key.keyCode === KEYS.LEFT && !pause) {\r\n      MoveLeft();\r\n    } else if (key.keyCode === KEYS.RIGHT && !pause) {\r\n      MoveRight();\r\n    } else if (key.keyCode === KEYS.DOWN && !pause) {\r\n      MoveDown();\r\n    } else if (key.keyCode === KEYS.SPACE && !pause) {\r\n      RotateTetromino();\r\n    } else if (key.keyCode === KEYS.PAUSE) {\r\n      pause = !pause;\r\n      if (pause === true) {\r\n        ctx.fillStyle = "#9900cc";\r\n        ctx.fillText("PAUSE", 500, 250);\r\n      } else {\r\n        ctx.fillStyle = "white";\r\n        ctx.fillRect(500, 225, 100, 30);\r\n      }\r\n    }\r\n  }\r\n}\r\nfunction MoveLeft() {\r\n  direction = DIRECTION.LEFT;\r\n  if (!HittingTheWall() && !HorizontalCollision()) {\r\n    DeleteTetromino();\r\n    startX--;\r\n    DrawTetromino();\r\n  }\r\n}\r\n\r\nfunction MoveRight() {\r\n  direction = DIRECTION.RIGHT;\r\n  if (!HittingTheWall() && !HorizontalCollision()) {\r\n    DeleteTetromino();\r\n    startX++;\r\n    DrawTetromino();\r\n  }\r\n}\r\n\r\nfunction MoveDown() {\r\n  direction = DIRECTION.DOWN;\r\n  if (!VerticalCollision()) {\r\n    DeleteTetromino();\r\n    startY++;\r\n    DrawTetromino();\r\n  }\r\n}\r\n\r\nfunction setSpeed(speed) {\r\n  time = window.setInterval(() => {\r\n    if (!pause) {\r\n      if (winOrLose != "Game Over") {\r\n        MoveDown();\r\n      }\r\n    }\r\n  }, 1000 / speed);\r\n}\r\n\r\nsetSpeed(speed);\r\n\r\nfunction HittingTheWall() {\r\n  for (let i = 0; i < currentTetromino.length; i++) {\r\n    let newX = currentTetromino[i][0] + startX;\r\n    if (newX <= 0 && direction === DIRECTION.LEFT) {\r\n      return true;\r\n    } else if (newX >= 15 && direction === DIRECTION.RIGHT) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction VerticalCollision() {\r\n  let copyTetromino = currentTetromino;\r\n  let collision = false;\r\n  for (let i = 0; i < copyTetromino.length; i++) {\r\n    let shape = copyTetromino[i];\r\n    let x = shape[0] + startX;\r\n    let y = shape[1] + startY;\r\n    if (direction === DIRECTION.DOWN) {\r\n      y++;\r\n    }\r\n\r\n    if (typeof stoppedShapeArray[x][y + 1] === "string") {\r\n      DeleteTetromino();\r\n      startY++;\r\n      DrawTetromino();\r\n      collision = true;\r\n      break;\r\n    }\r\n    if (y >= 25) {\r\n      collision = true;\r\n      break;\r\n    }\r\n  }\r\n  if (collision) {\r\n    if (startY <= 4) {\r\n      winOrLose = "Game Over";\r\n      ctx.fillStyle = "white";\r\n      ctx.fillRect(500, 180, 100, 30);\r\n      ctx.fillStyle = "black";\r\n      ctx.fillText(winOrLose, 500, 200);\r\n    } else {\r\n      for (let i = 0; i < copyTetromino.length; i++) {\r\n        let shape = copyTetromino[i];\r\n        let x = shape[0] + startX;\r\n        let y = shape[1] + startY;\r\n        stoppedShapeArray[x][y] = currentTetrominoColor;\r\n      }\r\n      CompletedRows();\r\n      CreateTetromino();\r\n      direction = DIRECTION.IDLE;\r\n      startX = 6;\r\n      startY = 0;\r\n      DrawTetromino();\r\n    }\r\n  }\r\n}\r\n\r\nfunction HorizontalCollision() {\r\n  var copyTetromino = currentTetromino;\r\n  var collision = false;\r\n  for (var i = 0; i < copyTetromino.length; i++) {\r\n    var shape = copyTetromino[i];\r\n    var x = shape[0] + startX;\r\n    var y = shape[1] + startY;\r\n\r\n    if (direction === DIRECTION.LEFT) {\r\n      x--;\r\n    } else if (direction === DIRECTION.RIGHT) {\r\n      x++;\r\n    }\r\n    var stoppedShapeValue = stoppedShapeArray[x][y];\r\n    if (typeof stoppedShapeValue === "string") {\r\n      collision = true;\r\n      break;\r\n    }\r\n  }\r\n  return collision;\r\n}\r\n\r\nfunction CompletedRows() {\r\n  var rowsToDelete = 0;\r\n  let startOfDeletion = 0;\r\n\r\n  for (let y = 0; y < gameBoardArrayHeight; y++) {\r\n    let completed = true;\r\n    for (let x = 0; x < gameBoardArrayWidth; x++) {\r\n      let shape = stoppedShapeArray[x][y];\r\n      if (shape === 0 || typeof shape === "undefined") {\r\n        completed = false;\r\n        break;\r\n      }\r\n    }\r\n    if (completed) {\r\n      if (startOfDeletion === 0) startOfDeletion = y + 4;\r\n      rowsToDelete++;\r\n      for (let i = 0; i < gameBoardArrayWidth; i++) {\r\n        stoppedShapeArray[i][y] = 0;\r\n        gameBoardArray[i][y] = 0;\r\n        let coorX = coordinateArray[i][y].x;\r\n        let coorY = coordinateArray[i][y].y;\r\n        ctx.fillStyle = "white";\r\n        ctx.fillRect(coorX, coorY, 20, 20);\r\n      }\r\n    }\r\n  }\r\n  if (rowsToDelete > 0) {\r\n    if (rowsToDelete === 1) {\r\n      score += 10;\r\n    }\r\n    if (rowsToDelete === 2) {\r\n      score += 20;\r\n    }\r\n    if (rowsToDelete === 3) {\r\n      score += 30;\r\n    }\r\n    if (rowsToDelete === 4) {\r\n      score += 40;\r\n    } else {\r\n      console.log("nothing was true");\r\n    }\r\n\r\n    if (score > localStorage.getItem("highScore")) {\r\n      localStorage.setItem("highScore", score);\r\n    }\r\n    ctx.fillRect(570, 85, 40, 25);\r\n    ctx.fillStyle = "green";\r\n    ctx.fillText(score.toString(), 570, 100);\r\n    MoveRowsDown(rowsToDelete, startOfDeletion);\r\n    if (score % levelUp === 0) {\r\n      speed = speed + 0.2;\r\n      level++;\r\n      ctx.fillRect(560, 130, 40, 25);\r\n      ctx.fillStyle = "green";\r\n      ctx.fillText(level.toString(), 570, 150);\r\n      clearInterval(time);\r\n      setSpeed(speed);\r\n    }\r\n  }\r\n}\r\n\r\nfunction MoveRowsDown(rowsToDelete, startOfDeletion) {\r\n  for (var i = startOfDeletion - 1; i >= 0; i--) {\r\n    for (var x = 0; x < gameBoardArrayWidth; x++) {\r\n      var y2 = i + rowsToDelete;\r\n      var shape = stoppedShapeArray[x][i];\r\n      var nextShape = stoppedShapeArray[x][y2];\r\n      if (typeof shape === "string") {\r\n        nextShape = shape;\r\n        gameBoardArray[x][y2] = 1;\r\n        stoppedShapeArray[x][y2] = shape;\r\n        let coorX = coordinateArray[x][y2].x;\r\n        let coorY = coordinateArray[x][y2].y;\r\n        ctx.fillStyle = nextShape;\r\n        ctx.fillRect(coorX, coorY, 20, 20);\r\n        shape = 0;\r\n        gameBoardArray[x][i] = 0;\r\n        stoppedShapeArray[x][i] = 0;\r\n        coorX = coordinateArray[x][i].x;\r\n        coorY = coordinateArray[x][i].y;\r\n        ctx.fillStyle = "white";\r\n        ctx.fillRect(coorX, coorY, 20, 20);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction RotateTetromino() {\r\n  let newRotation = new Array();\r\n  let tetrominoCopy = currentTetromino;\r\n  let currentTetrominoBackUp;\r\n  for (let i = 0; i < tetrominoCopy.length; i++) {\r\n    currentTetrominoBackUp = [...currentTetromino];\r\n    let x = tetrominoCopy[i][0];\r\n    let y = tetrominoCopy[i][1];\r\n    let newX = GetLastSquareX() - y;\r\n    let newY = x;\r\n    newRotation.push([newX, newY]);\r\n  }\r\n  DeleteTetromino();\r\n  try {\r\n    currentTetromino = newRotation;\r\n    DrawTetromino();\r\n  } catch (e) {\r\n    if (e instanceof TypeError) {\r\n      currentTetromino = currentTetrominoBackUp;\r\n      DeleteTetromino();\r\n      DrawTetromino();\r\n    }\r\n  }\r\n}\r\nfunction GetLastSquareX() {\r\n  let lastX = 0;\r\n  for (let i = 0; i < currentTetromino.length; i++) {\r\n    let square = currentTetromino[i];\r\n    if (square[0] > lastX) lastX = square[0];\r\n  }\r\n  return lastX;\r\n}\r\n\r\n// Number of key\r\n// function keyCode(e) {\r\n//   console.log(e.keyCode);\r\n// }\r\n// window.addEventListener("keydown", keyCode);\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///0\n')}]);